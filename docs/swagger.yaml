basePath: /
definitions:
  app.SwaggerUpdateTransportationRequest:
    properties:
      transport:
        type: string
    type: object
  ds.Container:
    properties:
      cargo:
        maxLength: 50
        type: string
      height:
        type: integer
      image_url:
        type: string
      length:
        type: integer
      marking:
        maxLength: 11
        type: string
      type:
        maxLength: 50
        type: string
      uuid:
        type: string
      weight:
        type: integer
      width:
        type: integer
    required:
    - cargo
    - height
    - length
    - marking
    - type
    - weight
    - width
    type: object
  schemes.AllContainersResponse:
    properties:
      containers:
        items:
          $ref: '#/definitions/ds.Container'
        type: array
    type: object
  schemes.AllTransportationsResponse:
    properties:
      transportations:
        items:
          $ref: '#/definitions/schemes.TransportationOutput'
        type: array
    type: object
  schemes.GetAllContainersResponse:
    properties:
      containers:
        items:
          $ref: '#/definitions/ds.Container'
        type: array
      draft_transportation:
        $ref: '#/definitions/schemes.TransportationShort'
    type: object
  schemes.LoginReq:
    properties:
      login:
        maxLength: 30
        type: string
      password:
        maxLength: 30
        type: string
    required:
    - login
    - password
    type: object
  schemes.RegisterReq:
    properties:
      login:
        maxLength: 30
        type: string
      password:
        maxLength: 30
        type: string
    required:
    - login
    - password
    type: object
  schemes.RegisterResp:
    properties:
      ok:
        type: boolean
    type: object
  schemes.TransportationOutput:
    properties:
      completion_date:
        type: string
      creation_date:
        type: string
      customer:
        type: string
      formation_date:
        type: string
      moderator:
        type: string
      status:
        type: string
      transport:
        type: string
      uuid:
        type: string
    type: object
  schemes.TransportationResponse:
    properties:
      containers:
        items:
          $ref: '#/definitions/ds.Container'
        type: array
      transportation:
        $ref: '#/definitions/schemes.TransportationOutput'
    type: object
  schemes.TransportationShort:
    properties:
      container_count:
        type: integer
      uuid:
        type: string
    type: object
  schemes.UpdateTransportationResponse:
    properties:
      transportation:
        $ref: '#/definitions/schemes.TransportationOutput'
    type: object
host: localhost:8080
info:
  contact: {}
  title: Container loginstics
  version: "1.0"
paths:
  /api/containers:
    get:
      description: Возвращает все доступные контейнеры с опциональной фильтрацией
        по типу
      parameters:
      - description: тип контейнера для фильтрации
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.GetAllContainersResponse'
      summary: Получить все контейнеры
      tags:
      - Контейнеры
  /api/containers/:
    post:
      consumes:
      - multipart/form-data
      description: Добавить новый контейнер
      parameters:
      - description: Изображение контейнера
        in: formData
        name: image
        type: file
      - description: Маркировка
        in: formData
        name: marking
        required: true
        type: string
      - description: Тип
        in: formData
        name: type
        required: true
        type: string
      - description: Длина
        in: formData
        name: length
        required: true
        type: integer
      - description: Высота
        in: formData
        name: height
        required: true
        type: integer
      - description: Ширина
        in: formData
        name: width
        required: true
        type: integer
      - description: Груз
        in: formData
        name: cargo
        required: true
        type: string
      - description: Вес
        in: formData
        name: weight
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: Добавить контейнер
      tags:
      - Контейнеры
  /api/containers/{container_id}:
    delete:
      description: Удаляет контейнер по id
      parameters:
      - description: id контейнера
        in: path
        name: container_id
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Удалить контейнер
      tags:
      - Контейнеры
    get:
      description: Возвращает более подробную информацию об одном контейнере
      parameters:
      - description: id контейнера
        in: path
        name: container_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ds.Container'
      summary: Получить один контейнер
      tags:
      - Контейнеры
    put:
      consumes:
      - multipart/form-data
      description: Изменить данные полей о контейнере
      parameters:
      - description: Идентификатор контейнера
        in: path
        name: container_id
        required: true
        type: string
      - description: Маркировка
        in: formData
        name: marking
        type: string
      - description: Тип
        in: formData
        name: type
        type: string
      - description: Длина
        in: formData
        name: length
        type: integer
      - description: Высота
        in: formData
        name: height
        type: integer
      - description: Ширина
        in: formData
        name: width
        type: integer
      - description: Изображение контейнера
        in: formData
        name: image
        type: file
      - description: Груз
        in: formData
        name: cargo
        type: string
      - description: Вес
        in: formData
        name: weight
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Изменить котейнер
      tags:
      - Контейнеры
  /api/containers/{container_id}/add_to_transportation:
    post:
      description: Добавить выбранный контейнер в черновик перевозки
      parameters:
      - description: id контейнера
        in: path
        name: container_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.AllContainersResponse'
      summary: Добавить в перевозку
      tags:
      - Контейнеры
  /api/transportations:
    get:
      description: Возвращает все перевозки с фильтрацией по статусу и дате формирования
      parameters:
      - description: статус перевозки
        in: query
        name: status
        type: string
      - description: начальная дата формирования
        in: query
        name: formation_date_start
        type: string
      - description: конечная дата формирвания
        in: query
        name: formation_date_end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.AllTransportationsResponse'
      summary: Получить все перевозки
      tags:
      - Перевозки
  /api/transportations/{transportation_id}:
    delete:
      description: Удаляет первозку по id
      parameters:
      - description: id перевозки
        in: path
        name: transportation_id
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Удалить перевозку
      tags:
      - Перевозки
    get:
      description: Возвращает подробную информацию о перевозке и её составе
      parameters:
      - description: id перевозки
        in: path
        name: transportation_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.TransportationResponse'
      summary: Получить одну перевозку
      tags:
      - Перевозки
    put:
      description: Позволяет изменить транспорт перевозки и возвращает обновлённые
        данные
      parameters:
      - description: id перевозки
        in: path
        name: transportation_id
        required: true
        type: string
      - description: Транспорт
        in: body
        name: transport
        required: true
        schema:
          $ref: '#/definitions/app.SwaggerUpdateTransportationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.UpdateTransportationResponse'
      summary: Указать транспорт перевозки
      tags:
      - Перевозки
  /api/transportations/{transportation_id}/delete_container/{container_id}:
    delete:
      description: Удалить контейнер из перевозки
      parameters:
      - description: id перевозки
        in: path
        name: transportation_id
        required: true
        type: string
      - description: id контейнера
        in: path
        name: container_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.AllContainersResponse'
      summary: Удалить контейнер из перевозки
      tags:
      - Перевозки
  /api/transportations/{transportation_id}/moderator_confirm:
    put:
      description: Подтвердить или отменить перевозку модератором
      parameters:
      - description: id перевозки
        in: path
        name: transportation_id
        required: true
        type: string
      - description: подтвердить
        in: body
        name: confirm
        required: true
        schema:
          type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Подтвердить перевозку
      tags:
      - Перевозки
  /api/transportations/{transportation_id}/user_confirm:
    put:
      description: Сформировать или удалить перевозку перевозку пользователем
      parameters:
      - description: id перевозки
        in: path
        name: transportation_id
        required: true
        type: string
      - description: подтвердить
        in: body
        name: confirm
        required: true
        schema:
          type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Сформировать перевозку
      tags:
      - Перевозки
  /auth/login:
    post:
      consumes:
      - application/json
      description: Авторизует пользователя по логиню, паролю и отдаёт jwt токен для
        дальнейших запросов
      parameters:
      - description: login and password
        in: body
        name: user_credentials
        required: true
        schema:
          $ref: '#/definitions/schemes.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Авторизация
      tags:
      - Авторизация
  /auth/loguot:
    post:
      consumes:
      - application/json
      description: Выход из аккаунта
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Выйти из аккаунта
      tags:
      - Авторизация
  /auth/sign_up:
    post:
      consumes:
      - application/json
      description: Регистрация нового пользователя
      parameters:
      - description: login and password
        in: body
        name: user_credentials
        required: true
        schema:
          $ref: '#/definitions/schemes.RegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.RegisterResp'
      summary: Регистрация
      tags:
      - Авторизация
schemes:
- http
swagger: "2.0"
